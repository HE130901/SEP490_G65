// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cms_server.Models;

#nullable disable

namespace cms_server.Migrations
{
    [DbContext(typeof(CmsContext))]
    [Migration("20240720033243_AddConfirmedByNavigationToNicheReservation")]
    partial class AddConfirmedByNavigationToNicheReservation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("cms_server.Models.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AreaId"));

                    b.Property<string>("AreaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AreaPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FloorId")
                        .HasColumnType("int")
                        .HasColumnName("FloorID");

                    b.HasKey("AreaId")
                        .HasName("PK__Area__70B820282FEB4332");

                    b.HasIndex("FloorId");

                    b.ToTable("Area", (string)null);
                });

            modelBuilder.Entity("cms_server.Models.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BuildingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingId"));

                    b.Property<string>("BuildingDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BuildingPicture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BuildingId")
                        .HasName("PK__Building__5463CDE47FC5507E");

                    b.ToTable("Building", (string)null);
                });

            modelBuilder.Entity("cms_server.Models.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("DeceasedId")
                        .HasColumnType("int")
                        .HasColumnName("DeceasedID");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("NicheId")
                        .HasColumnType("int")
                        .HasColumnName("NicheID");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("ContractId")
                        .HasName("PK__Contract__C90D340952B816AC");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeceasedId");

                    b.HasIndex("NicheId");

                    b.HasIndex("StaffId");

                    b.ToTable("Contract", (string)null);
                });

            modelBuilder.Entity("cms_server.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CitizenId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CitizenID");

                    b.Property<DateOnly?>("CitizenIdissuanceDate")
                        .HasColumnType("date")
                        .HasColumnName("CitizenIDIssuanceDate");

                    b.Property<string>("CitizenIdsupplier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CitizenIDSupplier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64B859788EC1");

                    b.HasIndex(new[] { "CitizenId" }, "UQ__Customer__6E49FBEDEF910C9B")
                        .IsUnique()
                        .HasFilter("[CitizenID] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "UQ__Customer__A9D10534D6DC3CFC")
                        .IsUnique();

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("cms_server.Models.Deceased", b =>
                {
                    b.Property<int>("DeceasedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DeceasedID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeceasedId"));

                    b.Property<string>("CitizenId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CitizenID");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateOfDeath")
                        .HasColumnType("date");

                    b.Property<string>("DeathCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeathCertificateSupplier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("NicheId")
                        .HasColumnType("int")
                        .HasColumnName("NicheID");

                    b.Property<string>("RelationshipWithCusomer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DeceasedId")
                        .HasName("PK__Deceased__E7DB31FD16B025FA");

                    b.HasIndex("CustomerId");

                    b.HasIndex("NicheId");

                    b.HasIndex(new[] { "CitizenId" }, "UQ__Deceased__6E49FBED064ED074")
                        .IsUnique()
                        .HasFilter("[CitizenID] IS NOT NULL");

                    b.ToTable("Deceased", (string)null);
                });

            modelBuilder.Entity("cms_server.Models.Floor", b =>
                {
                    b.Property<int>("FloorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FloorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FloorId"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("int")
                        .HasColumnName("BuildingID");

                    b.Property<string>("FloorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FloorPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NichePrice")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("FloorId")
                        .HasName("PK__Floor__49D1E86B1B8A3F1A");

                    b.HasIndex("BuildingId");

                    b.ToTable("Floor", (string)null);
                });

            modelBuilder.Entity("cms_server.Models.Niche", b =>
                {
                    b.Property<int>("NicheId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NicheID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NicheId"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("DeceasedId")
                        .HasColumnType("int")
                        .HasColumnName("DeceasedID");

                    b.Property<string>("NicheDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NicheName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NicheId")
                        .HasName("PK__Niche__57FA59229B329836");

                    b.HasIndex("AreaId");

                    b.ToTable("Niche", (string)null);
                });

            modelBuilder.Entity("cms_server.Models.NicheHistory", b =>
                {
                    b.Property<int>("NicheHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NicheHistoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NicheHistoryId"));

                    b.Property<int?>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("DeceasedId")
                        .HasColumnType("int")
                        .HasColumnName("DeceasedID");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("NicheId")
                        .HasColumnType("int")
                        .HasColumnName("NicheID");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NicheHistoryId")
                        .HasName("PK__NicheHis__0ACA3FC8745DB891");

                    b.HasIndex("ContractId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeceasedId");

                    b.HasIndex("NicheId");

                    b.ToTable("NicheHistory", (string)null);
                });

            modelBuilder.Entity("cms_server.Models.NicheReservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReservationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ConfirmedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NicheId")
                        .HasColumnType("int")
                        .HasColumnName("NicheID");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SignAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ReservationId")
                        .HasName("PK__NicheRes__B7EE5F0404A73A4A");

                    b.HasIndex("ConfirmedBy");

                    b.HasIndex("NicheId");

                    b.ToTable("NicheReservation", (string)null);
                });

            modelBuilder.Entity("cms_server.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<int?>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NotificationDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ServiceOrderId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceOrderID");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    b.Property<int?>("VisitId")
                        .HasColumnType("int")
                        .HasColumnName("VisitID");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E321630E339");

                    b.HasIndex("ContractId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServiceOrderId");

                    b.HasIndex("StaffId");

                    b.HasIndex("VisitId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("cms_server.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReportID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GeneratedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReportType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ReportId")
                        .HasName("PK__Report__D5BD48E5126CC1D2");

                    b.ToTable("Report", (string)null);
                });

            modelBuilder.Entity("cms_server.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ServicePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceId")
                        .HasName("PK__Service__C51BB0EA3C1B2E72");

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("cms_server.Models.ServiceOrder", b =>
                {
                    b.Property<int>("ServiceOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ServiceOrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceOrderId"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int>("NicheId")
                        .HasColumnType("int")
                        .HasColumnName("NicheID");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ServiceOrderCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasDefaultValueSql("(left(CONVERT([nvarchar](36),newid()),(15)))");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    b.HasKey("ServiceOrderId")
                        .HasName("PK__ServiceO__8E1ABD0581438783");

                    b.HasIndex("CustomerId");

                    b.HasIndex("NicheId");

                    b.HasIndex("StaffId");

                    b.HasIndex(new[] { "ServiceOrderCode" }, "UQ_ServiceOrderCode")
                        .IsUnique()
                        .HasFilter("[ServiceOrderCode] IS NOT NULL");

                    b.ToTable("ServiceOrder", (string)null);
                });

            modelBuilder.Entity("cms_server.Models.ServiceOrderDetail", b =>
                {
                    b.Property<int>("ServiceOrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ServiceOrderDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceOrderDetailId"));

                    b.Property<string>("CompletionImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.Property<int>("ServiceOrderId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceOrderID");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ServiceOrderDetailId")
                        .HasName("PK__ServiceO__92D8F322BE359A85");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServiceOrderId");

                    b.ToTable("ServiceOrderDetail", (string)null);
                });

            modelBuilder.Entity("cms_server.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StaffId")
                        .HasName("PK__Staff__96D4AAF7F7D131D5");

                    b.HasIndex(new[] { "Email" }, "UQ__Staff__A9D10534F09B9C17")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("cms_server.Models.VisitRegistration", b =>
                {
                    b.Property<int>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitId"));

                    b.Property<int?>("AccompanyingPeople")
                        .HasColumnType("int");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int>("NicheId")
                        .HasColumnType("int")
                        .HasColumnName("NicheID");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("VisitDate")
                        .HasColumnType("datetime");

                    b.HasKey("VisitId")
                        .HasName("PK__VisitReg__4D3AA1BE3DB80515");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("CustomerId");

                    b.HasIndex("NicheId");

                    b.ToTable("VisitRegistration", (string)null);
                });

            modelBuilder.Entity("cms_server.Models.Area", b =>
                {
                    b.HasOne("cms_server.Models.Floor", "Floor")
                        .WithMany("Areas")
                        .HasForeignKey("FloorId")
                        .IsRequired()
                        .HasConstraintName("FK__Area__FloorID__5CD6CB2B");

                    b.Navigation("Floor");
                });

            modelBuilder.Entity("cms_server.Models.Contract", b =>
                {
                    b.HasOne("cms_server.Models.Customer", "Customer")
                        .WithMany("Contracts")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Contract__Custom__5DCAEF64");

                    b.HasOne("cms_server.Models.Deceased", "Deceased")
                        .WithMany("Contracts")
                        .HasForeignKey("DeceasedId")
                        .HasConstraintName("FK__Contract__Deceas__5EBF139D");

                    b.HasOne("cms_server.Models.Niche", "Niche")
                        .WithMany("Contracts")
                        .HasForeignKey("NicheId")
                        .IsRequired()
                        .HasConstraintName("FK__Contract__NicheI__5FB337D6");

                    b.HasOne("cms_server.Models.Staff", "Staff")
                        .WithMany("Contracts")
                        .HasForeignKey("StaffId")
                        .IsRequired()
                        .HasConstraintName("FK__Contract__StaffI__60A75C0F");

                    b.Navigation("Customer");

                    b.Navigation("Deceased");

                    b.Navigation("Niche");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("cms_server.Models.Deceased", b =>
                {
                    b.HasOne("cms_server.Models.Customer", "Customer")
                        .WithMany("Deceaseds")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Deceased__Custom__619B8048");

                    b.HasOne("cms_server.Models.Niche", "Niche")
                        .WithMany("Deceaseds")
                        .HasForeignKey("NicheId")
                        .HasConstraintName("FK__Deceased__NicheI__628FA481");

                    b.Navigation("Customer");

                    b.Navigation("Niche");
                });

            modelBuilder.Entity("cms_server.Models.Floor", b =>
                {
                    b.HasOne("cms_server.Models.Building", "Building")
                        .WithMany("Floors")
                        .HasForeignKey("BuildingId")
                        .IsRequired()
                        .HasConstraintName("FK__Floor__BuildingI__6383C8BA");

                    b.Navigation("Building");
                });

            modelBuilder.Entity("cms_server.Models.Niche", b =>
                {
                    b.HasOne("cms_server.Models.Area", "Area")
                        .WithMany("Niches")
                        .HasForeignKey("AreaId")
                        .IsRequired()
                        .HasConstraintName("FK__Niche__AreaID__6477ECF3");

                    b.Navigation("Area");
                });

            modelBuilder.Entity("cms_server.Models.NicheHistory", b =>
                {
                    b.HasOne("cms_server.Models.Contract", "Contract")
                        .WithMany("NicheHistories")
                        .HasForeignKey("ContractId")
                        .HasConstraintName("FK__NicheHist__Contr__656C112C");

                    b.HasOne("cms_server.Models.Customer", "Customer")
                        .WithMany("NicheHistories")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__NicheHist__Custo__66603565");

                    b.HasOne("cms_server.Models.Deceased", "Deceased")
                        .WithMany("NicheHistories")
                        .HasForeignKey("DeceasedId")
                        .HasConstraintName("FK__NicheHist__Decea__6754599E");

                    b.HasOne("cms_server.Models.Niche", "Niche")
                        .WithMany("NicheHistories")
                        .HasForeignKey("NicheId")
                        .IsRequired()
                        .HasConstraintName("FK__NicheHist__Niche__68487DD7");

                    b.Navigation("Contract");

                    b.Navigation("Customer");

                    b.Navigation("Deceased");

                    b.Navigation("Niche");
                });

            modelBuilder.Entity("cms_server.Models.NicheReservation", b =>
                {
                    b.HasOne("cms_server.Models.Staff", "ConfirmedByNavigation")
                        .WithMany("NicheReservations")
                        .HasForeignKey("ConfirmedBy")
                        .HasConstraintName("FK__NicheRese__ConfirmedBy__6C190EBB");

                    b.HasOne("cms_server.Models.Niche", "Niche")
                        .WithMany("NicheReservations")
                        .HasForeignKey("NicheId")
                        .IsRequired()
                        .HasConstraintName("FK__NicheRese__Niche__693CA210");

                    b.Navigation("ConfirmedByNavigation");

                    b.Navigation("Niche");
                });

            modelBuilder.Entity("cms_server.Models.Notification", b =>
                {
                    b.HasOne("cms_server.Models.Contract", "Contract")
                        .WithMany("Notifications")
                        .HasForeignKey("ContractId")
                        .HasConstraintName("FK__Notificat__Contr__6A30C649");

                    b.HasOne("cms_server.Models.Customer", "Customer")
                        .WithMany("Notifications")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Notificat__Custo__6B24EA82");

                    b.HasOne("cms_server.Models.ServiceOrder", "ServiceOrder")
                        .WithMany("Notifications")
                        .HasForeignKey("ServiceOrderId")
                        .HasConstraintName("FK__Notificat__Servi__6C190EBB");

                    b.HasOne("cms_server.Models.Staff", "Staff")
                        .WithMany("Notifications")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK__Notificat__Staff__6D0D32F4");

                    b.HasOne("cms_server.Models.VisitRegistration", "Visit")
                        .WithMany("Notifications")
                        .HasForeignKey("VisitId")
                        .HasConstraintName("FK__Notificat__Visit__6E01572D");

                    b.Navigation("Contract");

                    b.Navigation("Customer");

                    b.Navigation("ServiceOrder");

                    b.Navigation("Staff");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("cms_server.Models.ServiceOrder", b =>
                {
                    b.HasOne("cms_server.Models.Customer", "Customer")
                        .WithMany("ServiceOrders")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__ServiceOr__Custo__6EF57B66");

                    b.HasOne("cms_server.Models.Niche", "Niche")
                        .WithMany("ServiceOrders")
                        .HasForeignKey("NicheId")
                        .IsRequired()
                        .HasConstraintName("FK__ServiceOr__Niche__6FE99F9F");

                    b.HasOne("cms_server.Models.Staff", "Staff")
                        .WithMany("ServiceOrders")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK__ServiceOr__Staff__70DDC3D8");

                    b.Navigation("Customer");

                    b.Navigation("Niche");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("cms_server.Models.ServiceOrderDetail", b =>
                {
                    b.HasOne("cms_server.Models.Service", "Service")
                        .WithMany("ServiceOrderDetails")
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("FK__ServiceOr__Servi__72C60C4A");

                    b.HasOne("cms_server.Models.ServiceOrder", "ServiceOrder")
                        .WithMany("ServiceOrderDetails")
                        .HasForeignKey("ServiceOrderId")
                        .IsRequired()
                        .HasConstraintName("FK__ServiceOr__Servi__71D1E811");

                    b.Navigation("Service");

                    b.Navigation("ServiceOrder");
                });

            modelBuilder.Entity("cms_server.Models.VisitRegistration", b =>
                {
                    b.HasOne("cms_server.Models.Staff", "ApprovedByNavigation")
                        .WithMany("VisitRegistrations")
                        .HasForeignKey("ApprovedBy")
                        .HasConstraintName("FK__VisitRegi__Appro__73BA3083");

                    b.HasOne("cms_server.Models.Customer", "Customer")
                        .WithMany("VisitRegistrations")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__VisitRegi__Custo__74AE54BC");

                    b.HasOne("cms_server.Models.Niche", "Niche")
                        .WithMany("VisitRegistrations")
                        .HasForeignKey("NicheId")
                        .IsRequired()
                        .HasConstraintName("FK__VisitRegi__Niche__75A278F5");

                    b.Navigation("ApprovedByNavigation");

                    b.Navigation("Customer");

                    b.Navigation("Niche");
                });

            modelBuilder.Entity("cms_server.Models.Area", b =>
                {
                    b.Navigation("Niches");
                });

            modelBuilder.Entity("cms_server.Models.Building", b =>
                {
                    b.Navigation("Floors");
                });

            modelBuilder.Entity("cms_server.Models.Contract", b =>
                {
                    b.Navigation("NicheHistories");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("cms_server.Models.Customer", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Deceaseds");

                    b.Navigation("NicheHistories");

                    b.Navigation("Notifications");

                    b.Navigation("ServiceOrders");

                    b.Navigation("VisitRegistrations");
                });

            modelBuilder.Entity("cms_server.Models.Deceased", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("NicheHistories");
                });

            modelBuilder.Entity("cms_server.Models.Floor", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("cms_server.Models.Niche", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Deceaseds");

                    b.Navigation("NicheHistories");

                    b.Navigation("NicheReservations");

                    b.Navigation("ServiceOrders");

                    b.Navigation("VisitRegistrations");
                });

            modelBuilder.Entity("cms_server.Models.Service", b =>
                {
                    b.Navigation("ServiceOrderDetails");
                });

            modelBuilder.Entity("cms_server.Models.ServiceOrder", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("ServiceOrderDetails");
                });

            modelBuilder.Entity("cms_server.Models.Staff", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("NicheReservations");

                    b.Navigation("Notifications");

                    b.Navigation("ServiceOrders");

                    b.Navigation("VisitRegistrations");
                });

            modelBuilder.Entity("cms_server.Models.VisitRegistration", b =>
                {
                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
